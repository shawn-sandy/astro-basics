{
  "Astro Page Template": {
    "prefix": "astro-collection-page",
    "body": [
      "---",
      "import { getCollection } from \"astro:content\";",
      "import Layout from \"#layouts/Layout.astro\";",
      "import BlogPosts from \"#components/astro/BlogPosts.astro\";",
      "import Pagination from \"#components/astro/Pagination.astro\";",
      "import Blank from \"#components/astro/Blank.astro\";",
      "import type { TODO } from \"#utils/types.js\";",
      "",
      "export async function getStaticPaths({ paginate }) {",
      "  const allPosts = (await getCollection(\"${1:content}\")).filter((item) => {",
      "    return item.data.publish === true;",
      "  }).sort(",
      "    (a: { data: { pubDate: Date } }, b: { data: { pubDate: Date } }) =>",
      "      b.data.pubDate.getTime() - a.data.pubDate.getTime()",
      "  );",
      "  return paginate(allPosts, { pageSize: 2 });",
      "}",
      "",
      "const pageSize = ${2:2};",
      "const { page } = Astro.props as TODO;",
      "---",
      "",
      "<Layout pageTitle=\"Content\">",
      "  { ",
      "    page.data.length ?  ",
      "      page?.data.map((post: TODO) => (",
      "        <article>",
      "          <BlogPosts",
      "            url={post.slug}",
      "            title={post.data.title}",
      "            description={post.data.description}",
      "          />",
      "        </article>",
      "      )) : (",
      "      <h3>Sorry, no content here yet...</h3>",
      "      <Blank />",
      "    )",
      "  }",
      "  <!-- Pagination -->",
      "  <Pagination",
      "    collection=\"posts\"",
      "    itemsPerPage={pageSize}",
      "    currentPage={page?.currentPage}",
      "    prevUrl={page?.url?.prev || undefined}",
      "    nextUrl={page?.url?.next || undefined}",
      "    totalPages={page.size}",
      "  />",
      "</Layout>"
    ],
    "description": "Astro page template with pagination and blog posts"
  }
}