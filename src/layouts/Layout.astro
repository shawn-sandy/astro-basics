---
// import { ClientOnly } from "astro:transitions";
import Navigation from "#components/astro/Navigation.astro";
import Footer from "#components/astro/Footer.astro";
import Header from "#components/astro/Header.astro";
import Sidebar from "#components/astro/Sidebar.astro";
import AstroBreadcrumb from "#components/react/astro-breadcrumb.tsx";
import { SITE_DESCRIPTION, SITE_TITLE } from "#utils/site-config";
import "@fpkit/acss/styles";
import "../styles/index.css";
import {
  SignedIn,
  SignedOut,
  UserButton,
  SignInButton,
} from "@clerk/astro/components";

// types
type routeItem = {
  name: string;
  url: string;
  path?: string;
};
type Props = {
  pageTitle?: string;
  pageDescription?: string;
  pageImageUrl?: string;
  showBreadcrumb?: boolean;
  breadcrumbRoutes?: routeItem[];
};

const showBreadcrumb =
  Astro.props.showBreadcrumb === undefined ? true : Astro.props.showBreadcrumb;

const { pageTitle, pageDescription, breadcrumbRoutes, pageImageUrl } =
  Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="sitemap" href="/sitemap-index.xml" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content={SITE_DESCRIPTION} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle || SITE_TITLE}</title>
    <!-- <ViewTransitions /> -->
    <style>
      .clerk-loading {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 40px;
      }
      
      .loading-spinner {
        width: 20px;
        height: 20px;
        border: 2px solid #f3f3f3;
        border-top: 2px solid #555;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
      
      @keyframes spin {
        0% { transform: rotate(0deg); }
        100% { transform: rotate(360deg); }
      }
    </style>
  </head>
  <body>
    <Navigation>
      <div slot="login">
        <div id="clerk-loading" class="clerk-loading">
          <div class="loading-spinner"></div>
        </div>
        <div id="clerk-auth" class="clerk-auth" style="display: none;">
          <SignedIn>
            <UserButton />
          </SignedIn>
          <SignedOut>
            <SignInButton mode="modal" />
          </SignedOut>
        </div>
      </div>
    </Navigation>
  </body>
  <Header
    headerTitle={pageTitle}
    headerDescription={pageDescription}
    headerImageUrl={pageImageUrl}
    headerImageAlt={pageTitle}
  />

  <slot name="featured" />
  <main>
    <section>
      {
        showBreadcrumb && (
          <>
            <AstroBreadcrumb
              routes={breadcrumbRoutes || undefined}
              client:load
            />
          </>
        )
      }
    </section>
    <section arai-label="main-content">
      <article>
        <slot />

        <aside>
          <slot name="sidebar" />
          <Sidebar />
          <slot name="sidebar-footer" />
        </aside>
      </article>
    </section>
    <Footer />
  </main>
  
  <script>
    // Hide loading and show Clerk components when ready
    window.addEventListener('DOMContentLoaded', () => {
      // Check if Clerk is loaded by polling for its presence
      const checkClerkLoaded = () => {
        if (window.Clerk || document.querySelector('.cl-userButton') || document.querySelector('.cl-signInButton')) {
          const loading = document.getElementById('clerk-loading');
          const auth = document.getElementById('clerk-auth');
          
          if (loading && auth) {
            loading.style.display = 'none';
            auth.style.display = 'block';
          }
        } else {
          // Poll every 100ms until Clerk is ready
          setTimeout(checkClerkLoaded, 100);
        }
      };
      
      checkClerkLoaded();
    });
  </script>
</html>
